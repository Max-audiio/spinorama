[build-system]
requires = ["setuptools", "wheel", "Cython"]

[project]
name = "spinorama"
description = "Spinorama computes speaker measurements"
readme = "README.md"
requires-python = ">=3.12"
license = "GPL"
authors = [
    { name = "Pierre Aubert", email = "pierre0aubert@gmail.com" },
]

[project.urls]
Homepage = "https://www.spinorama.org"
API = "https://api.spinorama.org"
Documentation = "https://github.com/pierreaubert/spinorama/tree/master/tutorial"

[tool.pyright]
include = [".", "src", "tests"]
ignore = ["book", "experimentals", "datas/measurements", "datas/eq", "datas/pictures"]
venvPath = './.venv'
typeCheckingMode = 'basic'
pythonVersion = "3.12"
pythonPlatform = "Linux"

[tool.ruff]
line-length = 100

#   F Pyflakes
# E/W pycodestyle
# C90 mccabe
#   I isort
#   N pep8-naming
#   D pydocstyle
#  UP pyupgrade
# YTT flake8-2020
# ANN flake8-annotations
#   S flake8-bandit
# BLE flake8-blind-except
# FBT flake8-boolean-trap
#   B flake8-bugbear
#   A flake8-builtins
# COM flake8-commas
#  C4 flake8-comprehensions
# DTZ flake8-datetimez
# T10 flake8-debugger
#  DJ flake8-django
#  EM flake8-errmsg
# EXE flake8-executable
# ISC flake8-implicit-str-concat
# ICN flake8-import-conventions
#   G flake8-logging-format
# INP flake8-no-pep420
# PIE flake8-pie
# T20 flake8-print
# PYI flake8-pyi
#  PT flake8-pytest-style
#   Q flake8-quotes
# RSE flake8-raise
# RET flake8-return
# SLF flake8-self
# SIM flake8-simplify
# TID flake8-tidy-imports
# TCH flake8-type-checking
# ARG flake8-unused-arguments
# PTH flake8-use-pathlib
# ERA eradicate
#  PD pandas-vet
# PGH pygrep-hooks
#  PL Pylint
# TRY tryceratops
# NPY NumPy-specific rules
# RUF Ruff-specific rules

lint.select = ["F", "N", "YTT", "S", "B", "FBT", "EM", "ISC", "EXE", "G", "Q", "T20", "SIM", "PD", "PL", "TRY", "NPY", "RUF"]
lint.ignore = [
       "PLR",
       "T20",
       "ISC001",
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["F", "N", "YTT", "S", "B", "FBT", "EM", "ISC", "EXE", "G", "Q", "T20", "SIM", "PD", "PL", "TRY", "NPY", "RUF"]
lint.unfixable = []
